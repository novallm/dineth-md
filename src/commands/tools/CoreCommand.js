const { MessageType } = require('@whiskeysockets/baileys');

class CoreCommand {
    constructor() {
        this.name = 'core';
        this.description = 'Core features powered by free APIs';
    }

    async execute(client, message, args) {
        if (!args[0]) {
            return message.reply(`*üöÄ Core Commands*\n\n` +
                `1. *OpenAI API* (Free Tier)\n` +
                `*.core ai* - AI & Chat Assistant\n` +
                `‚Ä¢ Chat, Writing, Code Help\n` +
                `‚Ä¢ Text Analysis, Translation\n` +
                `‚Ä¢ Learning Assistant\n\n` +
                
                `2. *RapidAPI* (Free Tier)\n` +
                `*.core media* - Media Tools\n` +
                `‚Ä¢ Music Search & Lyrics\n` +
                `‚Ä¢ Video Information\n` +
                `‚Ä¢ News & Articles\n\n` +
                
                `3. *Cloudinary* (Free Tier)\n` +
                `*.core image* - Image Processing\n` +
                `‚Ä¢ Image Editing\n` +
                `‚Ä¢ File Conversion\n` +
                `‚Ä¢ Media Storage\n\n` +
                
                `4. *OpenWeatherMap* (Free API)\n` +
                `*.core weather* - Weather Info\n` +
                `‚Ä¢ Current Weather\n` +
                `‚Ä¢ Forecasts\n` +
                `‚Ä¢ Location Based\n\n` +
                
                `5. *CoinGecko* (Free API)\n` +
                `*.core crypto* - Crypto Data\n` +
                `‚Ä¢ Price Tracking\n` +
                `‚Ä¢ Market Info\n` +
                `‚Ä¢ Coin Details\n\n` +
                
                `Type any command for options!`);
        }

        const subCommand = args[0].toLowerCase();

        switch (subCommand) {
            case 'ai':
                return message.reply(`*ü§ñ AI Assistant (OpenAI)*\n\n` +
                    `Features:\n` +
                    `‚Ä¢ Smart Chat\n` +
                    `‚Ä¢ Writing Help\n` +
                    `‚Ä¢ Code Generation\n` +
                    `‚Ä¢ Translation\n` +
                    `‚Ä¢ Learning Aid\n\n` +
                    `Commands:\n` +
                    `*.core ai chat* - Chat with AI\n` +
                    `*.core ai write* - Writing help\n` +
                    `*.core ai code* - Code help\n` +
                    `*.core ai translate* - Translate\n` +
                    `*.core ai learn* - Study help`);

            case 'media':
                return message.reply(`*üì± Media Tools (RapidAPI)*\n\n` +
                    `Features:\n` +
                    `‚Ä¢ Music Search\n` +
                    `‚Ä¢ Lyrics Finder\n` +
                    `‚Ä¢ Video Info\n` +
                    `‚Ä¢ News Search\n` +
                    `‚Ä¢ Article Reader\n\n` +
                    `Commands:\n` +
                    `*.core media music* - Find music\n` +
                    `*.core media lyrics* - Get lyrics\n` +
                    `*.core media video* - Video info\n` +
                    `*.core media news* - Latest news\n` +
                    `*.core media article* - Read articles`);

            case 'image':
                return message.reply(`*üñºÔ∏è Image Tools (Cloudinary)*\n\n` +
                    `Features:\n` +
                    `‚Ä¢ Image Editing\n` +
                    `‚Ä¢ Format Conversion\n` +
                    `‚Ä¢ File Storage\n` +
                    `‚Ä¢ Image Effects\n` +
                    `‚Ä¢ Optimization\n\n` +
                    `Commands:\n` +
                    `*.core image edit* - Edit image\n` +
                    `*.core image convert* - Convert format\n` +
                    `*.core image store* - Store file\n` +
                    `*.core image effect* - Add effects\n` +
                    `*.core image optimize* - Optimize image`);

            case 'weather':
                return message.reply(`*üå§Ô∏è Weather (OpenWeatherMap)*\n\n` +
                    `Features:\n` +
                    `‚Ä¢ Current Weather\n` +
                    `‚Ä¢ 5-Day Forecast\n` +
                    `‚Ä¢ Location Search\n` +
                    `‚Ä¢ Weather Maps\n` +
                    `‚Ä¢ Alerts\n\n` +
                    `Commands:\n` +
                    `*.core weather now* - Current weather\n` +
                    `*.core weather forecast* - Get forecast\n` +
                    `*.core weather search* - Find location\n` +
                    `*.core weather map* - Weather map\n` +
                    `*.core weather alert* - Get alerts`);

            case 'crypto':
                return message.reply(`*üí∞ Crypto (CoinGecko)*\n\n` +
                    `Features:\n` +
                    `‚Ä¢ Price Tracking\n` +
                    `‚Ä¢ Market Data\n` +
                    `‚Ä¢ Coin Info\n` +
                    `‚Ä¢ Price Charts\n` +
                    `‚Ä¢ Trending Coins\n\n` +
                    `Commands:\n` +
                    `*.core crypto price* - Check prices\n` +
                    `*.core crypto market* - Market data\n` +
                    `*.core crypto info* - Coin details\n` +
                    `*.core crypto chart* - View charts\n` +
                    `*.core crypto trend* - Trending coins`);

            default:
                return message.reply('‚ùå Invalid command. Use *.core* to see all commands.');
        }
    }
}

module.exports = CoreCommand; 